@font-face {
  font-family: 'montserratsemibold';
  src: url('../fonts/Montserrat/Montserrat-SemiBold.eot');
  src: url('../fonts/Montserrat/Montserrat-SemiBold.eot?#iefix') format('embedded-opentype'), url('../fonts/Montserrat/Montserrat-SemiBold.woff') format('woff'), url('../fonts/Montserrat/Montserrat-SemiBold.ttf') format('truetype');
  font-weight: 600;
  font-style: normal;
}
@font-face {
  font-family: 'montserratmedium';
  src: url('../fonts/Montserrat/Montserrat-Medium.eot');
  src: url('../fonts/Montserrat/Montserrat-Medium.eot?#iefix') format('embedded-opentype'), url('../fonts/Montserrat/Montserrat-Medium.woff') format('woff'), url('../fonts/Montserrat/Montserrat-Medium.ttf') format('truetype');
  font-weight: 500;
  font-style: normal;
}
* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
html,
body {
  width: 100%;
  height: 100%;
}
body {
  min-width: 320px;
  font-size: 13px;
  color: #b7b7b7;
  font-family: 'montserratmedium', sans-serif;
  line-height: 1.2;
  letter-spacing: 2px;
  -webkit-font-smoothing: antialiased;
  background: #FBFBFB url(/img/bg.jpg) repeat;
}
header,
section {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  position: relative;
}
ul {
  padding: 0;
  margin: 0;
}
li {
  list-style: none;
}
p {
  margin: 0;
}
.wrapper {
  min-height: 100%;
  overflow: hidden;
  position: relative;
  width: 100%;
}
img {
  display: block;
  max-width: 100%;
  max-height: 100%;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: 0;
  font-weight: normal;
}
/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}
/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block;
}
/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
}
/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}
/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}
/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none;
}
/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
  text-decoration: none;
}
/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}
a:hover {
  text-decoration: none;
}
/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}
/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}
/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}
/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}
/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}
/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}
/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}
/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}
/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
}
/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold;
}
/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}
/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}
/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}
/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}
/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}
/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}
/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}
/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}
.header {
  padding: 8px 0;
  background-color: rgba(255, 255, 255, 0.5);
  z-index: 10;
}
.header__container {
  position: relative;
  margin: 0 auto;
  padding: 0 15px;
}
@media screen and (min-width: 1390px) {
  .header__container {
    max-width: 1390px;
  }
}
.header__content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
@media screen and (max-width: 576px) {
  .header__nav {
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
}
.header__user {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.header__user > *:not(:last-child) {
  margin-right: 20px;
}
@media screen and (max-width: 576px) {
  .header__user > *:not(:last-child) {
    margin-right: 10px;
  }
}
.button {
  background-color: #ed291c;
  text-transform: uppercase;
  color: #ffffff;
  text-align: center;
  padding: 12px;
  display: block;
  width: 100%;
  border: 0;
  cursor: pointer;
  letter-spacing: 2px;
  -webkit-transition: background-color 0.15s ease;
  -o-transition: background-color 0.15s ease;
  transition: background-color 0.15s ease;
}
.button:focus {
  outline: 0;
}
.button:hover {
  background-color: #d01c10;
}
.button.active {
  background-color: #97150c;
}
.logo {
  display: block;
  width: 109px;
}
.logo__img {
  width: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}
.navigation {
  max-width: 1090px;
  -webkit-transition: visibility 0.2s ease, opacity 0.2s ease;
  -o-transition: visibility 0.2s ease, opacity 0.2s ease;
  transition: visibility 0.2s ease, opacity 0.2s ease;
}
@media screen and (max-width: 991.1px) {
  .navigation {
    opacity: 0;
    visibility: hidden;
    position: absolute;
    width: 100%;
    left: 0;
    top: -8px;
    background-color: rgba(0, 0, 0, 0.9);
  }
}
.navigation.active {
  visibility: visible;
  opacity: 1;
}
.navigation.active .navigation__cancel {
  visibility: visible;
  opacity: 1;
}
.site-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.site-list > *:not(:last-child) {
  margin-right: 25px;
}
@media screen and (max-width: 991.1px) {
  .site-list {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    padding: 30px 10px;
  }
  .site-list > *:not(:last-child) {
    margin-right: 0;
  }
}
.site-list__item {
  text-transform: uppercase;
  font-size: 13px;
  position: relative;
}
.site-list__item:hover .site-list__link {
  color: #ed291c;
}
.site-list__item:hover .dropdown {
  visibility: visible;
  opacity: 1;
}
.site-list__link {
  display: inline-block;
  color: #b7b7b7;
  padding: 5px;
  -webkit-transition: color 0.15s ease;
  -o-transition: color 0.15s ease;
  transition: color 0.15s ease;
}
@media screen and (max-width: 991.1px) {
  .site-list__link {
    color: #ffffff;
    padding: 15px;
  }
}
.navigation__cancel {
  width: 20px;
  position: absolute;
  top: 20px;
  right: 25px;
  opacity: 0;
  visibility: hidden;
  -webkit-transition: visibility 0.2s ease, opacity 0.2s ease;
  -o-transition: visibility 0.2s ease, opacity 0.2s ease;
  transition: visibility 0.2s ease, opacity 0.2s ease;
}
.user {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.user__photo {
  width: 44px;
  -webkit-box-flex: 0;
  -ms-flex: 0 0 44px;
  flex: 0 0 44px;
  height: 44px;
  border-radius: 50%;
  background-color: #dddddd;
  margin-right: 20px;
  overflow: hidden;
}
.user__photo img {
  width: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}
@media screen and (max-width: 1200px) {
  .user__photo {
    margin-right: 10px;
  }
}
@media screen and (max-width: 767.1px) {
  .user__photo {
    margin-right: 0;
  }
}
.user__name {
  text-transform: uppercase;
  color: #b7b7b7;
}
@media screen and (max-width: 767.1px) {
  .user__name {
    display: none;
  }
}
.dropdown {
  position: absolute;
  visibility: hidden;
  opacity: 0;
  -webkit-box-shadow: 0 2px 40px rgba(0, 0, 0, 0.07);
  box-shadow: 0 2px 40px rgba(0, 0, 0, 0.07);
  top: calc(100% + 15px);
  background-color: #fff;
  left: 0;
  z-index: 10;
  width: 300px;
  -webkit-transform: translateX(-25%);
  -ms-transform: translateX(-25%);
  transform: translateX(-25%);
  padding: 35px 45px 35px 75px;
  -webkit-transition: visibility 0.15s ease, opacity 0.15s ease;
  -o-transition: visibility 0.15s ease, opacity 0.15s ease;
  transition: visibility 0.15s ease, opacity 0.15s ease;
}
.dropdown::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 20px;
  left: 0;
  bottom: 100%;
}
.dropdown__list > *:not(:last-child) {
  margin-bottom: 20px;
}
.dropdown__link {
  display: inline-block;
  color: #b7b7b7;
  padding: 5px;
  -webkit-transition: color 0.15s ease;
  -o-transition: color 0.15s ease;
  transition: color 0.15s ease;
}
.dropdown__link:hover {
  color: #ed291c;
}
.cards {
  padding-top: 40px;
}
.cards__container {
  position: relative;
  margin: 0 auto;
  padding: 0 15px;
}
@media screen and (min-width: 1390px) {
  .cards__container {
    max-width: 1390px;
  }
}
.cards__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -10px;
}
@media screen and (max-width: 991.1px) {
  .cards__list {
    -ms-flex-pack: distribute;
    justify-content: space-around;
  }
}
.card {
  width: 100%;
  -webkit-box-flex: 0;
  -ms-flex: 0 0 100%;
  flex: 0 0 100%;
  background-color: #ffffff;
  padding: 45px 30px 27px 30px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-right: 10px;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  max-width: 310px;
  margin-bottom: 30px;
}
.card__img {
  text-align: center;
  margin-bottom: 50px;
}
.card__img img {
  display: inline-block;
}
.card h6 {
  text-transform: uppercase;
  color: #000000;
  font-size: 22px;
  letter-spacing: 2.57px;
  font-family: 'montserratsemibold', sans-serif;
  margin-bottom: 10px;
}
.card__text {
  margin-bottom: 10px;
}
.card__text p {
  line-height: 1.4;
}
.card__price {
  margin-top: auto;
  margin-bottom: 10px;
  color: #000000;
  font-family: 'montserratsemibold', sans-serif;
  letter-spacing: 1px;
  font-size: 14px;
}
.basket {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 160px;
  -webkit-box-flex: 0;
  -ms-flex: 0 0 160px;
  flex: 0 0 160px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #b7b7b7;
  cursor: pointer;
}
.basket > *:not(:last-child) {
  margin-right: 10px;
}
@media screen and (max-width: 767.1px) {
  .basket {
    width: 80px;
    -webkit-box-flex: 0;
    -ms-flex: 0 0 80px;
    flex: 0 0 80px;
  }
}
.basket__img {
  width: 30px;
}
.basket__number::before {
  content: '(';
}
.basket__number::after {
  content: ')';
}
@media screen and (max-width: 767.1px) {
  .basket__text {
    display: none;
  }
}
.rating {
  margin-bottom: 19px;
}
.rating::after {
  content: '';
  display: table;
  clear: both;
}
/*sprite with stars*/
.reviewStars-input input:checked ~ label,
.reviewStars-input label,
.reviewStars-input label:hover,
.reviewStars-input label:hover ~ label {
  background: url('/img/cards/svg-sprite.svg') no-repeat;
}
.reviewStars-input {
  /*fix floating problems*/
  overflow: hidden;
  *zoom: 1;
  /*end of fix floating problems*/
  position: relative;
  float: left;
}
.reviewStars-input input {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
  opacity: 0;
  width: 18px;
  height: 18px;
  position: absolute;
  top: 0;
  z-index: 0;
}
.reviewStars-input input:checked ~ label {
  background-position: 0 0;
  height: 18px;
  width: 18px;
}
.reviewStars-input label {
  background-position: -25px 0;
  height: 18px;
  width: 18px;
  float: right;
  cursor: pointer;
  margin-right: 17px;
  position: relative;
  z-index: 1;
}
.reviewStars-input label:hover,
.reviewStars-input label:hover ~ label {
  background-position: 0 0;
  height: 18px;
  width: 18px;
}
.sort {
  margin-bottom: 30px;
}
.sort > *:not(:last-child)::after {
  content: '|';
  margin: 0 5px;
  position: absolute;
  top: 0;
  right: -10px;
}
@media screen and (max-width: 991.1px) {
  .sort {
    text-align: center;
  }
}
.sort__item {
  position: relative;
  background-color: transparent;
  border: 0;
  font-size: 15px;
  cursor: pointer;
}
.sort__item span {
  -webkit-transition: color 0.15s ease;
  -o-transition: color 0.15s ease;
  transition: color 0.15s ease;
}
.sort__item:hover span {
  color: #f1564b;
}
.sort__item:focus {
  outline: 0;
}
.toggle {
  position: relative;
}
@media screen and (min-width: 991.1px) {
  .toggle {
    display: none;
  }
}
.toggle__btn {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 120px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border: 0;
  background-color: #ed291c;
  padding: 5px 10px;
  cursor: pointer;
  -webkit-transition: background-color 0.1s ease;
  -o-transition: background-color 0.1s ease;
  transition: background-color 0.1s ease;
}
.toggle__btn:active {
  background-color: #de1e12;
}
@media screen and (max-width: 576px) {
  .toggle__btn {
    width: initial;
  }
}
.toggle__btn:focus {
  outline: 0;
}
.toggle__sandwich {
  display: block;
  width: 20px;
  -webkit-box-flex: 0;
  -ms-flex: 0 0 20px;
  flex: 0 0 20px;
  margin-right: 15px;
}
@media screen and (max-width: 576px) {
  .toggle__sandwich {
    margin-right: 0;
  }
}
.toggle__text {
  color: #ffffff;
  letter-spacing: 1px;
}
@media screen and (max-width: 576px) {
  .toggle__text {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
